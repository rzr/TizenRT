language: c

os: linux
dist: trusty
sudo: false

services:
  - docker

before_install:
  - if [[ "$RUN_DOCKER" == "yes" ]]; then docker pull iotjs/ubuntu:0.9; fi

script:
  tools/travis_script.py

matrix:
  include:
    - env:
      - JOBNAME="Linux/x86-64 Build & Correctness Tests"
      - OPTS="host-linux"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="Raspberry Pi 2 Build Test"
      - OPTS="rpi2"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="STM32f4 Discovery with Nuttx Build Test"
      - OPTS="stm32f4dis"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="Artik053 with TizenRT Build Test"
      - OPTS="artik053"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="Tizen Build Test"
      - OPTS="tizen"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="ECMAScript 2015 features Build & Correctness Tests"
      - OPTS="es2015"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="External modules Build & Correctness Tests"
      - OPTS="external-modules"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="Linux/x86-64 without snapshot Build & Correctness Tests"
      - OPTS="no-snapshot"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="Misc checks (e.g. style checker)"
      - OPTS="misc"
      addons:
        apt:
          packages: [valgrind, clang-format-3.9]
    - env:
      - JOBNAME="OSX/x86-64 Build & Correctness Tests"
      - OPTS="host-darwin"
      os: osx
      install: tools/brew-install-deps.sh
    - env:
      - JOBNAME="ASAN Tests"
      - OPTS="asan"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="UBSAN Tests"
      - OPTS="ubsan"
      - RUN_DOCKER=yes
    - env:
      - JOBNAME="Coverity Scan"
      - OPTS="coverity"
      # Declaration of the encrypted COVERITY_SCAN_TOKEN, created via the
      # "travis encrypt" command using the project repo's public key.
      - secure: "lUGzoKK/Yn4/OmpqLQALrIgfY9mQWE51deUawPrCO87UQ2GknfQ4BvwY3UT5QY0XnztPBP1+vRQ2qxbiAU7VWicp280sXDnh0FeuZD14FcE9l0FczraL12reoLu+gY5HWFfbkZncmcBsZkxDEYxhkM14FJU8fxyqGQW2ypJNz+gUGP+8r40Re5J3WjcddCQNe5IG8U+M9B4YeDHhN2QspLdN5pkgn56XtdGa3+qbecO2NpjJG5ltM9j1tTuo/Dg22DxrIFVfeFSFKUj4nfMrgPo5LevRsC/lfaBSCsj751eqrxRcQRh2hkpiIJ7mEBs2LL1EH9O6Mbj+eRh8BvIYqTB85VPNFc43sLWk14apcSVBrxJE5j3kP9sAsOD9Y5JynnkeuxYyISrkywwoX2uxsmCzIfGbwsv5VLToQzrqWlGYrHOAmVXNi8561dLfsWwxxFUjdqkZr1Kgc8UfnBEcBUtSiKCHS86/YUUbBJGkEkjDUS0GiqhFY4bXLQCR7EX4qDX3m6p7Mnh4NVUolpnSmyeYE/MjmqQ+7PJsPLL3EcIYmJ7dtW3mZ3yE2NyaFD0Pym9+TiuCCXRtrNVK1M3Kya64KNv+HbhjT/fTCgXLSeyDmJOKVAqugRlDo3b1KGR1LI0AfegzSA6mEC4e9JLjYiSnHPMUahzgLt8oU0hNFRY="
      before_install:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      addons:
        coverity_scan:
          project:
            name: "Samsung/iotjs"
            description: "Platform for Internet of Things with JavaScript"
          notification_email: duddlf.choi@samsung.com
          build_command: "tools/travis_script.py"
          branch_pattern: master
    - env:
      - JOBNAME="SonarQube"
      addons:
        sonarcloud:
          organization: "samsung-iotjs"
          token:
            secure: "u9HWNQNhAqQQdgl3yldKcQVH8plMQRwIdpzjsM4j3GBC4Wrh9u8guLJB3o003i0UsyaGg2knYFdLgOmEsgcvXAo2aIUyzf9CfK9RLRw5RtIuPMpmR7UjHdlf+QfCF+nY+BB2j0nAiWnxHve95du7sZflNxi+eNJJzquyBh1Wm8eqwoiRpCgiDzjRDEAUoz0FWMNny/x5545E970jpQ2bjHGx98tCMUO8ikINeL8sC99sumffaFONG8GVpwLjc8McfQfYpWbk0e0OPxZtGDyqKcyMxcbAGctklsigtsBZKlpj69uba3w4OSA3zJPCdQ4dKwCyBOcAAP8qeF5Jf0eLI8WLEgnKir2Pfc/rKkY0owuz7S+tUmizm3+T06wDFgwpLu0/PcA5oOcp4WpGXbAX7WujaAHB7YKAEsk324XC7Bdf+39OuZ0dbKWMiwU7rYV4NOYNPjN2BCb1XqyE0Ung41Ls6P4t/zwzYRZtiovhr6ibNBcwLVclfQZ/tbyBDuh++8dh7Ixe+x5RFiiCB0w/fiKqqXYM8/we4JU3f71y4DK6fP+nSN/vIYttvkN28HCCvBVSdyuuvPRM6Ro1yLNw9U9PHCJ1CIgcx8+I8Mep3PzBhDILXWjzlVu4sa/+aIoEq7MvWBDMhrFEP6RX+M6CiPmgj5+Lu/GZNivbu51RASI="
      script: ./tools/check_sonarqube.sh
      cache:
        directories:
          - '$HOME/.sonar/cache'
  fast_finish: true
